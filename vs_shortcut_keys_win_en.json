[
    {
        "key": "ctrl+shift+2",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+1",
        "command": "workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+3",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.view.extensions"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFile",
        "when": "!editorTextFocus"
    },
    {
        "key": "ctrl+o",
        "command": "extension.vim_ctrl+o",
        "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "extension.vim_ctrl+r",
        "when": "editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"
    },
    {
        "key": "ctrl+i",
        "command": "extension.vim_ctrl+i",
        "when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "ctrl+y",
        "command": "undo",
        "when": "editorTextFocus && !vim.active"
    },
    {
        "key": "ctrl+shift+u",
        "command": "workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u001bb" },
        "when": "terminalFocus"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u001bf" },
        "when": "terminalFocus"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u0017" },
        "when": "terminalFocus"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "\u001B" },
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+p",
        "command": "extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpen",
        "when": "!editorTextFocus"
    },
    {
        "key": "ctrl+e",
        "command": "extension.vim_ctrl+e",
        "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+shift+y",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+x 0",
        "command": "workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+shift+r",
        "command": "redo",
        "when": "editorTextFocus && !vim.active"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "workbench.action.openGlobalKeybindingsFile",
        "when": "(!editorTextFocus && !terminal.active) || vim.active"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !vim.active"
    },
    {
        "key": "ctrl+k ctrl+oem_comma",
        "command": "workbench.action.openSettingsJson"
    },
    {
        "key": "ctrl+w v",
        "command": "workbench.action.splitEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+w s",
        "command": "workbench.action.splitEditorDown",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+x 2",
        "command": "workbench.action.splitEditorDown",
        "when": "!terminalfocus"
    },
    {
        "key": "ctrl+x 3",
        "command": "workbench.action.splitEditor",
        "when": "!terminalfocus"
    },
    {
        "key": "ctrl+x 0",
        "command": "workbench.action.closeEditorsInGroup",
    },
    {
        "key": "ctrl+x 1",
        "command": "workbench.action.closeEditorsInOtherGroups",
    },
    {
        "key": "ctrl+x t 1",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+x t 0",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+x 5 2",
        "command": "workbench.action.newWindow"
    },
    {
        "key": "ctrl+x 5 0",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "ctrl+x 5 f",
        "command": "workbench.action.moveEditorToNewWindow"
    },
    {
        "key": "ctrl+x c",
        "command": "workbench.action.closeActiveEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+w h",
        "command": "workbench.action.focusLeftGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+w shift+h",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+w l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+w shift+l",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+w shift+k",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+w k",
        "command": "workbench.action.focusAboveGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+w j",
        "command": "workbench.action.focusBelowGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+w shift+j",
        "command": "workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+b",
        "command": "extension.vim_ctrl+b",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl"
    },
    {
        "key": "ctrl+u",
        "command": "workbench.action.terminal.new",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.newWindow"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "workbench.action.files.saveFiles"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.compareEditor.focusPrimarySide"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.compareEditor.focusSecondarySide"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.action.compareEditor.swapSides"
    },
    {
        "key": "ctrl+x ctrl+f",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+x ctrl+shift+n",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "cmd+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+x ctrl+d",
        "command": "deleteFile"
    },
    {
        "key": "ctrl+enter",
        "command": "sqltools.executeCurrentQuery",
        "when": "editorTextFocus && editorLangId == 'sql'"
    },
    {
        "key": "ctrl+shift+i",
        "command": "toggleVim"
    },
    {
        "key": "cmd+f11",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "cmd+f10",
        "command": "workbench.action.debug.stepIntoTarget",
        "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
    },
    {
        "key": "cmd+f11",
        "command": "-workbench.action.debug.stepIntoTarget",
        "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
    },
    {
        "key": "shift+cmd+f11",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+x l",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "ctrl+x h",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+shift+z",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "workbench.action.toggleMaximizeEditorGroup"
    },
    {
        "key": "ctrl+k m",
        "command": "workbench.action.editor.changeLanguageMode"
    },
    // Emacs-style navigation when Vim is NOT active (regular VS Code editing)
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+e",
        "command": "cursorEnd",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+f",
        "command": "cursorRight",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+b",
        "command": "cursorLeft",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+n",
        "command": "cursorDown",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+p",
        "command": "cursorUp",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "alt+f",
        "command": "cursorWordRight",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "alt+b",
        "command": "cursorWordLeft",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+d",
        "command": "deleteRight",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+h",
        "command": "deleteLeft",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+k",
        "command": "deleteAllRight",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+u",
        "command": "deleteAllLeft",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "alt+d",
        "command": "deleteWordRight",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+w",
        "command": "deleteWordLeft",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+t",
        "command": "editor.action.transposeLetters",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    // Emacs-style navigation that works in BOTH Vim insert mode AND when Vim is not active
    {
        "key": "ctrl+s",
        "command": "actions.find",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "ctrl+v",
        "command": "cursorPageDown",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    },
    {
        "key": "alt+v",
        "command": "cursorPageUp",
        "when": "editorTextFocus && (vim.mode == 'Insert' || !vim.active)"
    }
]
